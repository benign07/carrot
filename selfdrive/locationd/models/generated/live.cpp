#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2221680810211877007) {
   out_2221680810211877007[0] = 0;
   out_2221680810211877007[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2221680810211877007[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2221680810211877007[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2221680810211877007[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2221680810211877007[5] = -sin(in_vec[1]);
   out_2221680810211877007[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2221680810211877007[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2221680810211877007[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2221680810211877007[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2221680810211877007[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2221680810211877007[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2221680810211877007[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2221680810211877007[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2221680810211877007[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2221680810211877007[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2221680810211877007[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2221680810211877007[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9058537909689266592) {
   out_9058537909689266592[0] = delta_x[0] + nom_x[0];
   out_9058537909689266592[1] = delta_x[1] + nom_x[1];
   out_9058537909689266592[2] = delta_x[2] + nom_x[2];
   out_9058537909689266592[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9058537909689266592[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9058537909689266592[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9058537909689266592[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9058537909689266592[7] = delta_x[6] + nom_x[7];
   out_9058537909689266592[8] = delta_x[7] + nom_x[8];
   out_9058537909689266592[9] = delta_x[8] + nom_x[9];
   out_9058537909689266592[10] = delta_x[9] + nom_x[10];
   out_9058537909689266592[11] = delta_x[10] + nom_x[11];
   out_9058537909689266592[12] = delta_x[11] + nom_x[12];
   out_9058537909689266592[13] = delta_x[12] + nom_x[13];
   out_9058537909689266592[14] = delta_x[13] + nom_x[14];
   out_9058537909689266592[15] = delta_x[14] + nom_x[15];
   out_9058537909689266592[16] = delta_x[15] + nom_x[16];
   out_9058537909689266592[17] = delta_x[16] + nom_x[17];
   out_9058537909689266592[18] = delta_x[17] + nom_x[18];
   out_9058537909689266592[19] = delta_x[18] + nom_x[19];
   out_9058537909689266592[20] = delta_x[19] + nom_x[20];
   out_9058537909689266592[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7576143246016953659) {
   out_7576143246016953659[0] = -nom_x[0] + true_x[0];
   out_7576143246016953659[1] = -nom_x[1] + true_x[1];
   out_7576143246016953659[2] = -nom_x[2] + true_x[2];
   out_7576143246016953659[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7576143246016953659[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7576143246016953659[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7576143246016953659[6] = -nom_x[7] + true_x[7];
   out_7576143246016953659[7] = -nom_x[8] + true_x[8];
   out_7576143246016953659[8] = -nom_x[9] + true_x[9];
   out_7576143246016953659[9] = -nom_x[10] + true_x[10];
   out_7576143246016953659[10] = -nom_x[11] + true_x[11];
   out_7576143246016953659[11] = -nom_x[12] + true_x[12];
   out_7576143246016953659[12] = -nom_x[13] + true_x[13];
   out_7576143246016953659[13] = -nom_x[14] + true_x[14];
   out_7576143246016953659[14] = -nom_x[15] + true_x[15];
   out_7576143246016953659[15] = -nom_x[16] + true_x[16];
   out_7576143246016953659[16] = -nom_x[17] + true_x[17];
   out_7576143246016953659[17] = -nom_x[18] + true_x[18];
   out_7576143246016953659[18] = -nom_x[19] + true_x[19];
   out_7576143246016953659[19] = -nom_x[20] + true_x[20];
   out_7576143246016953659[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_815593853557770859) {
   out_815593853557770859[0] = 1.0;
   out_815593853557770859[1] = 0;
   out_815593853557770859[2] = 0;
   out_815593853557770859[3] = 0;
   out_815593853557770859[4] = 0;
   out_815593853557770859[5] = 0;
   out_815593853557770859[6] = 0;
   out_815593853557770859[7] = 0;
   out_815593853557770859[8] = 0;
   out_815593853557770859[9] = 0;
   out_815593853557770859[10] = 0;
   out_815593853557770859[11] = 0;
   out_815593853557770859[12] = 0;
   out_815593853557770859[13] = 0;
   out_815593853557770859[14] = 0;
   out_815593853557770859[15] = 0;
   out_815593853557770859[16] = 0;
   out_815593853557770859[17] = 0;
   out_815593853557770859[18] = 0;
   out_815593853557770859[19] = 0;
   out_815593853557770859[20] = 0;
   out_815593853557770859[21] = 0;
   out_815593853557770859[22] = 1.0;
   out_815593853557770859[23] = 0;
   out_815593853557770859[24] = 0;
   out_815593853557770859[25] = 0;
   out_815593853557770859[26] = 0;
   out_815593853557770859[27] = 0;
   out_815593853557770859[28] = 0;
   out_815593853557770859[29] = 0;
   out_815593853557770859[30] = 0;
   out_815593853557770859[31] = 0;
   out_815593853557770859[32] = 0;
   out_815593853557770859[33] = 0;
   out_815593853557770859[34] = 0;
   out_815593853557770859[35] = 0;
   out_815593853557770859[36] = 0;
   out_815593853557770859[37] = 0;
   out_815593853557770859[38] = 0;
   out_815593853557770859[39] = 0;
   out_815593853557770859[40] = 0;
   out_815593853557770859[41] = 0;
   out_815593853557770859[42] = 0;
   out_815593853557770859[43] = 0;
   out_815593853557770859[44] = 1.0;
   out_815593853557770859[45] = 0;
   out_815593853557770859[46] = 0;
   out_815593853557770859[47] = 0;
   out_815593853557770859[48] = 0;
   out_815593853557770859[49] = 0;
   out_815593853557770859[50] = 0;
   out_815593853557770859[51] = 0;
   out_815593853557770859[52] = 0;
   out_815593853557770859[53] = 0;
   out_815593853557770859[54] = 0;
   out_815593853557770859[55] = 0;
   out_815593853557770859[56] = 0;
   out_815593853557770859[57] = 0;
   out_815593853557770859[58] = 0;
   out_815593853557770859[59] = 0;
   out_815593853557770859[60] = 0;
   out_815593853557770859[61] = 0;
   out_815593853557770859[62] = 0;
   out_815593853557770859[63] = 0;
   out_815593853557770859[64] = 0;
   out_815593853557770859[65] = 0;
   out_815593853557770859[66] = -0.5*state[4];
   out_815593853557770859[67] = -0.5*state[5];
   out_815593853557770859[68] = -0.5*state[6];
   out_815593853557770859[69] = 0;
   out_815593853557770859[70] = 0;
   out_815593853557770859[71] = 0;
   out_815593853557770859[72] = 0;
   out_815593853557770859[73] = 0;
   out_815593853557770859[74] = 0;
   out_815593853557770859[75] = 0;
   out_815593853557770859[76] = 0;
   out_815593853557770859[77] = 0;
   out_815593853557770859[78] = 0;
   out_815593853557770859[79] = 0;
   out_815593853557770859[80] = 0;
   out_815593853557770859[81] = 0;
   out_815593853557770859[82] = 0;
   out_815593853557770859[83] = 0;
   out_815593853557770859[84] = 0;
   out_815593853557770859[85] = 0;
   out_815593853557770859[86] = 0;
   out_815593853557770859[87] = 0.5*state[3];
   out_815593853557770859[88] = 0.5*state[6];
   out_815593853557770859[89] = -0.5*state[5];
   out_815593853557770859[90] = 0;
   out_815593853557770859[91] = 0;
   out_815593853557770859[92] = 0;
   out_815593853557770859[93] = 0;
   out_815593853557770859[94] = 0;
   out_815593853557770859[95] = 0;
   out_815593853557770859[96] = 0;
   out_815593853557770859[97] = 0;
   out_815593853557770859[98] = 0;
   out_815593853557770859[99] = 0;
   out_815593853557770859[100] = 0;
   out_815593853557770859[101] = 0;
   out_815593853557770859[102] = 0;
   out_815593853557770859[103] = 0;
   out_815593853557770859[104] = 0;
   out_815593853557770859[105] = 0;
   out_815593853557770859[106] = 0;
   out_815593853557770859[107] = 0;
   out_815593853557770859[108] = -0.5*state[6];
   out_815593853557770859[109] = 0.5*state[3];
   out_815593853557770859[110] = 0.5*state[4];
   out_815593853557770859[111] = 0;
   out_815593853557770859[112] = 0;
   out_815593853557770859[113] = 0;
   out_815593853557770859[114] = 0;
   out_815593853557770859[115] = 0;
   out_815593853557770859[116] = 0;
   out_815593853557770859[117] = 0;
   out_815593853557770859[118] = 0;
   out_815593853557770859[119] = 0;
   out_815593853557770859[120] = 0;
   out_815593853557770859[121] = 0;
   out_815593853557770859[122] = 0;
   out_815593853557770859[123] = 0;
   out_815593853557770859[124] = 0;
   out_815593853557770859[125] = 0;
   out_815593853557770859[126] = 0;
   out_815593853557770859[127] = 0;
   out_815593853557770859[128] = 0;
   out_815593853557770859[129] = 0.5*state[5];
   out_815593853557770859[130] = -0.5*state[4];
   out_815593853557770859[131] = 0.5*state[3];
   out_815593853557770859[132] = 0;
   out_815593853557770859[133] = 0;
   out_815593853557770859[134] = 0;
   out_815593853557770859[135] = 0;
   out_815593853557770859[136] = 0;
   out_815593853557770859[137] = 0;
   out_815593853557770859[138] = 0;
   out_815593853557770859[139] = 0;
   out_815593853557770859[140] = 0;
   out_815593853557770859[141] = 0;
   out_815593853557770859[142] = 0;
   out_815593853557770859[143] = 0;
   out_815593853557770859[144] = 0;
   out_815593853557770859[145] = 0;
   out_815593853557770859[146] = 0;
   out_815593853557770859[147] = 0;
   out_815593853557770859[148] = 0;
   out_815593853557770859[149] = 0;
   out_815593853557770859[150] = 0;
   out_815593853557770859[151] = 0;
   out_815593853557770859[152] = 0;
   out_815593853557770859[153] = 1.0;
   out_815593853557770859[154] = 0;
   out_815593853557770859[155] = 0;
   out_815593853557770859[156] = 0;
   out_815593853557770859[157] = 0;
   out_815593853557770859[158] = 0;
   out_815593853557770859[159] = 0;
   out_815593853557770859[160] = 0;
   out_815593853557770859[161] = 0;
   out_815593853557770859[162] = 0;
   out_815593853557770859[163] = 0;
   out_815593853557770859[164] = 0;
   out_815593853557770859[165] = 0;
   out_815593853557770859[166] = 0;
   out_815593853557770859[167] = 0;
   out_815593853557770859[168] = 0;
   out_815593853557770859[169] = 0;
   out_815593853557770859[170] = 0;
   out_815593853557770859[171] = 0;
   out_815593853557770859[172] = 0;
   out_815593853557770859[173] = 0;
   out_815593853557770859[174] = 0;
   out_815593853557770859[175] = 1.0;
   out_815593853557770859[176] = 0;
   out_815593853557770859[177] = 0;
   out_815593853557770859[178] = 0;
   out_815593853557770859[179] = 0;
   out_815593853557770859[180] = 0;
   out_815593853557770859[181] = 0;
   out_815593853557770859[182] = 0;
   out_815593853557770859[183] = 0;
   out_815593853557770859[184] = 0;
   out_815593853557770859[185] = 0;
   out_815593853557770859[186] = 0;
   out_815593853557770859[187] = 0;
   out_815593853557770859[188] = 0;
   out_815593853557770859[189] = 0;
   out_815593853557770859[190] = 0;
   out_815593853557770859[191] = 0;
   out_815593853557770859[192] = 0;
   out_815593853557770859[193] = 0;
   out_815593853557770859[194] = 0;
   out_815593853557770859[195] = 0;
   out_815593853557770859[196] = 0;
   out_815593853557770859[197] = 1.0;
   out_815593853557770859[198] = 0;
   out_815593853557770859[199] = 0;
   out_815593853557770859[200] = 0;
   out_815593853557770859[201] = 0;
   out_815593853557770859[202] = 0;
   out_815593853557770859[203] = 0;
   out_815593853557770859[204] = 0;
   out_815593853557770859[205] = 0;
   out_815593853557770859[206] = 0;
   out_815593853557770859[207] = 0;
   out_815593853557770859[208] = 0;
   out_815593853557770859[209] = 0;
   out_815593853557770859[210] = 0;
   out_815593853557770859[211] = 0;
   out_815593853557770859[212] = 0;
   out_815593853557770859[213] = 0;
   out_815593853557770859[214] = 0;
   out_815593853557770859[215] = 0;
   out_815593853557770859[216] = 0;
   out_815593853557770859[217] = 0;
   out_815593853557770859[218] = 0;
   out_815593853557770859[219] = 1.0;
   out_815593853557770859[220] = 0;
   out_815593853557770859[221] = 0;
   out_815593853557770859[222] = 0;
   out_815593853557770859[223] = 0;
   out_815593853557770859[224] = 0;
   out_815593853557770859[225] = 0;
   out_815593853557770859[226] = 0;
   out_815593853557770859[227] = 0;
   out_815593853557770859[228] = 0;
   out_815593853557770859[229] = 0;
   out_815593853557770859[230] = 0;
   out_815593853557770859[231] = 0;
   out_815593853557770859[232] = 0;
   out_815593853557770859[233] = 0;
   out_815593853557770859[234] = 0;
   out_815593853557770859[235] = 0;
   out_815593853557770859[236] = 0;
   out_815593853557770859[237] = 0;
   out_815593853557770859[238] = 0;
   out_815593853557770859[239] = 0;
   out_815593853557770859[240] = 0;
   out_815593853557770859[241] = 1.0;
   out_815593853557770859[242] = 0;
   out_815593853557770859[243] = 0;
   out_815593853557770859[244] = 0;
   out_815593853557770859[245] = 0;
   out_815593853557770859[246] = 0;
   out_815593853557770859[247] = 0;
   out_815593853557770859[248] = 0;
   out_815593853557770859[249] = 0;
   out_815593853557770859[250] = 0;
   out_815593853557770859[251] = 0;
   out_815593853557770859[252] = 0;
   out_815593853557770859[253] = 0;
   out_815593853557770859[254] = 0;
   out_815593853557770859[255] = 0;
   out_815593853557770859[256] = 0;
   out_815593853557770859[257] = 0;
   out_815593853557770859[258] = 0;
   out_815593853557770859[259] = 0;
   out_815593853557770859[260] = 0;
   out_815593853557770859[261] = 0;
   out_815593853557770859[262] = 0;
   out_815593853557770859[263] = 1.0;
   out_815593853557770859[264] = 0;
   out_815593853557770859[265] = 0;
   out_815593853557770859[266] = 0;
   out_815593853557770859[267] = 0;
   out_815593853557770859[268] = 0;
   out_815593853557770859[269] = 0;
   out_815593853557770859[270] = 0;
   out_815593853557770859[271] = 0;
   out_815593853557770859[272] = 0;
   out_815593853557770859[273] = 0;
   out_815593853557770859[274] = 0;
   out_815593853557770859[275] = 0;
   out_815593853557770859[276] = 0;
   out_815593853557770859[277] = 0;
   out_815593853557770859[278] = 0;
   out_815593853557770859[279] = 0;
   out_815593853557770859[280] = 0;
   out_815593853557770859[281] = 0;
   out_815593853557770859[282] = 0;
   out_815593853557770859[283] = 0;
   out_815593853557770859[284] = 0;
   out_815593853557770859[285] = 1.0;
   out_815593853557770859[286] = 0;
   out_815593853557770859[287] = 0;
   out_815593853557770859[288] = 0;
   out_815593853557770859[289] = 0;
   out_815593853557770859[290] = 0;
   out_815593853557770859[291] = 0;
   out_815593853557770859[292] = 0;
   out_815593853557770859[293] = 0;
   out_815593853557770859[294] = 0;
   out_815593853557770859[295] = 0;
   out_815593853557770859[296] = 0;
   out_815593853557770859[297] = 0;
   out_815593853557770859[298] = 0;
   out_815593853557770859[299] = 0;
   out_815593853557770859[300] = 0;
   out_815593853557770859[301] = 0;
   out_815593853557770859[302] = 0;
   out_815593853557770859[303] = 0;
   out_815593853557770859[304] = 0;
   out_815593853557770859[305] = 0;
   out_815593853557770859[306] = 0;
   out_815593853557770859[307] = 1.0;
   out_815593853557770859[308] = 0;
   out_815593853557770859[309] = 0;
   out_815593853557770859[310] = 0;
   out_815593853557770859[311] = 0;
   out_815593853557770859[312] = 0;
   out_815593853557770859[313] = 0;
   out_815593853557770859[314] = 0;
   out_815593853557770859[315] = 0;
   out_815593853557770859[316] = 0;
   out_815593853557770859[317] = 0;
   out_815593853557770859[318] = 0;
   out_815593853557770859[319] = 0;
   out_815593853557770859[320] = 0;
   out_815593853557770859[321] = 0;
   out_815593853557770859[322] = 0;
   out_815593853557770859[323] = 0;
   out_815593853557770859[324] = 0;
   out_815593853557770859[325] = 0;
   out_815593853557770859[326] = 0;
   out_815593853557770859[327] = 0;
   out_815593853557770859[328] = 0;
   out_815593853557770859[329] = 1.0;
   out_815593853557770859[330] = 0;
   out_815593853557770859[331] = 0;
   out_815593853557770859[332] = 0;
   out_815593853557770859[333] = 0;
   out_815593853557770859[334] = 0;
   out_815593853557770859[335] = 0;
   out_815593853557770859[336] = 0;
   out_815593853557770859[337] = 0;
   out_815593853557770859[338] = 0;
   out_815593853557770859[339] = 0;
   out_815593853557770859[340] = 0;
   out_815593853557770859[341] = 0;
   out_815593853557770859[342] = 0;
   out_815593853557770859[343] = 0;
   out_815593853557770859[344] = 0;
   out_815593853557770859[345] = 0;
   out_815593853557770859[346] = 0;
   out_815593853557770859[347] = 0;
   out_815593853557770859[348] = 0;
   out_815593853557770859[349] = 0;
   out_815593853557770859[350] = 0;
   out_815593853557770859[351] = 1.0;
   out_815593853557770859[352] = 0;
   out_815593853557770859[353] = 0;
   out_815593853557770859[354] = 0;
   out_815593853557770859[355] = 0;
   out_815593853557770859[356] = 0;
   out_815593853557770859[357] = 0;
   out_815593853557770859[358] = 0;
   out_815593853557770859[359] = 0;
   out_815593853557770859[360] = 0;
   out_815593853557770859[361] = 0;
   out_815593853557770859[362] = 0;
   out_815593853557770859[363] = 0;
   out_815593853557770859[364] = 0;
   out_815593853557770859[365] = 0;
   out_815593853557770859[366] = 0;
   out_815593853557770859[367] = 0;
   out_815593853557770859[368] = 0;
   out_815593853557770859[369] = 0;
   out_815593853557770859[370] = 0;
   out_815593853557770859[371] = 0;
   out_815593853557770859[372] = 0;
   out_815593853557770859[373] = 1.0;
   out_815593853557770859[374] = 0;
   out_815593853557770859[375] = 0;
   out_815593853557770859[376] = 0;
   out_815593853557770859[377] = 0;
   out_815593853557770859[378] = 0;
   out_815593853557770859[379] = 0;
   out_815593853557770859[380] = 0;
   out_815593853557770859[381] = 0;
   out_815593853557770859[382] = 0;
   out_815593853557770859[383] = 0;
   out_815593853557770859[384] = 0;
   out_815593853557770859[385] = 0;
   out_815593853557770859[386] = 0;
   out_815593853557770859[387] = 0;
   out_815593853557770859[388] = 0;
   out_815593853557770859[389] = 0;
   out_815593853557770859[390] = 0;
   out_815593853557770859[391] = 0;
   out_815593853557770859[392] = 0;
   out_815593853557770859[393] = 0;
   out_815593853557770859[394] = 0;
   out_815593853557770859[395] = 1.0;
   out_815593853557770859[396] = 0;
   out_815593853557770859[397] = 0;
   out_815593853557770859[398] = 0;
   out_815593853557770859[399] = 0;
   out_815593853557770859[400] = 0;
   out_815593853557770859[401] = 0;
   out_815593853557770859[402] = 0;
   out_815593853557770859[403] = 0;
   out_815593853557770859[404] = 0;
   out_815593853557770859[405] = 0;
   out_815593853557770859[406] = 0;
   out_815593853557770859[407] = 0;
   out_815593853557770859[408] = 0;
   out_815593853557770859[409] = 0;
   out_815593853557770859[410] = 0;
   out_815593853557770859[411] = 0;
   out_815593853557770859[412] = 0;
   out_815593853557770859[413] = 0;
   out_815593853557770859[414] = 0;
   out_815593853557770859[415] = 0;
   out_815593853557770859[416] = 0;
   out_815593853557770859[417] = 1.0;
   out_815593853557770859[418] = 0;
   out_815593853557770859[419] = 0;
   out_815593853557770859[420] = 0;
   out_815593853557770859[421] = 0;
   out_815593853557770859[422] = 0;
   out_815593853557770859[423] = 0;
   out_815593853557770859[424] = 0;
   out_815593853557770859[425] = 0;
   out_815593853557770859[426] = 0;
   out_815593853557770859[427] = 0;
   out_815593853557770859[428] = 0;
   out_815593853557770859[429] = 0;
   out_815593853557770859[430] = 0;
   out_815593853557770859[431] = 0;
   out_815593853557770859[432] = 0;
   out_815593853557770859[433] = 0;
   out_815593853557770859[434] = 0;
   out_815593853557770859[435] = 0;
   out_815593853557770859[436] = 0;
   out_815593853557770859[437] = 0;
   out_815593853557770859[438] = 0;
   out_815593853557770859[439] = 1.0;
   out_815593853557770859[440] = 0;
   out_815593853557770859[441] = 0;
   out_815593853557770859[442] = 0;
   out_815593853557770859[443] = 0;
   out_815593853557770859[444] = 0;
   out_815593853557770859[445] = 0;
   out_815593853557770859[446] = 0;
   out_815593853557770859[447] = 0;
   out_815593853557770859[448] = 0;
   out_815593853557770859[449] = 0;
   out_815593853557770859[450] = 0;
   out_815593853557770859[451] = 0;
   out_815593853557770859[452] = 0;
   out_815593853557770859[453] = 0;
   out_815593853557770859[454] = 0;
   out_815593853557770859[455] = 0;
   out_815593853557770859[456] = 0;
   out_815593853557770859[457] = 0;
   out_815593853557770859[458] = 0;
   out_815593853557770859[459] = 0;
   out_815593853557770859[460] = 0;
   out_815593853557770859[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1987600578531036294) {
   out_1987600578531036294[0] = dt*state[7] + state[0];
   out_1987600578531036294[1] = dt*state[8] + state[1];
   out_1987600578531036294[2] = dt*state[9] + state[2];
   out_1987600578531036294[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1987600578531036294[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1987600578531036294[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1987600578531036294[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1987600578531036294[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1987600578531036294[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1987600578531036294[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1987600578531036294[10] = state[10];
   out_1987600578531036294[11] = state[11];
   out_1987600578531036294[12] = state[12];
   out_1987600578531036294[13] = state[13];
   out_1987600578531036294[14] = state[14];
   out_1987600578531036294[15] = state[15];
   out_1987600578531036294[16] = state[16];
   out_1987600578531036294[17] = state[17];
   out_1987600578531036294[18] = state[18];
   out_1987600578531036294[19] = state[19];
   out_1987600578531036294[20] = state[20];
   out_1987600578531036294[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8763257145105801012) {
   out_8763257145105801012[0] = 1;
   out_8763257145105801012[1] = 0;
   out_8763257145105801012[2] = 0;
   out_8763257145105801012[3] = 0;
   out_8763257145105801012[4] = 0;
   out_8763257145105801012[5] = 0;
   out_8763257145105801012[6] = dt;
   out_8763257145105801012[7] = 0;
   out_8763257145105801012[8] = 0;
   out_8763257145105801012[9] = 0;
   out_8763257145105801012[10] = 0;
   out_8763257145105801012[11] = 0;
   out_8763257145105801012[12] = 0;
   out_8763257145105801012[13] = 0;
   out_8763257145105801012[14] = 0;
   out_8763257145105801012[15] = 0;
   out_8763257145105801012[16] = 0;
   out_8763257145105801012[17] = 0;
   out_8763257145105801012[18] = 0;
   out_8763257145105801012[19] = 0;
   out_8763257145105801012[20] = 0;
   out_8763257145105801012[21] = 0;
   out_8763257145105801012[22] = 1;
   out_8763257145105801012[23] = 0;
   out_8763257145105801012[24] = 0;
   out_8763257145105801012[25] = 0;
   out_8763257145105801012[26] = 0;
   out_8763257145105801012[27] = 0;
   out_8763257145105801012[28] = dt;
   out_8763257145105801012[29] = 0;
   out_8763257145105801012[30] = 0;
   out_8763257145105801012[31] = 0;
   out_8763257145105801012[32] = 0;
   out_8763257145105801012[33] = 0;
   out_8763257145105801012[34] = 0;
   out_8763257145105801012[35] = 0;
   out_8763257145105801012[36] = 0;
   out_8763257145105801012[37] = 0;
   out_8763257145105801012[38] = 0;
   out_8763257145105801012[39] = 0;
   out_8763257145105801012[40] = 0;
   out_8763257145105801012[41] = 0;
   out_8763257145105801012[42] = 0;
   out_8763257145105801012[43] = 0;
   out_8763257145105801012[44] = 1;
   out_8763257145105801012[45] = 0;
   out_8763257145105801012[46] = 0;
   out_8763257145105801012[47] = 0;
   out_8763257145105801012[48] = 0;
   out_8763257145105801012[49] = 0;
   out_8763257145105801012[50] = dt;
   out_8763257145105801012[51] = 0;
   out_8763257145105801012[52] = 0;
   out_8763257145105801012[53] = 0;
   out_8763257145105801012[54] = 0;
   out_8763257145105801012[55] = 0;
   out_8763257145105801012[56] = 0;
   out_8763257145105801012[57] = 0;
   out_8763257145105801012[58] = 0;
   out_8763257145105801012[59] = 0;
   out_8763257145105801012[60] = 0;
   out_8763257145105801012[61] = 0;
   out_8763257145105801012[62] = 0;
   out_8763257145105801012[63] = 0;
   out_8763257145105801012[64] = 0;
   out_8763257145105801012[65] = 0;
   out_8763257145105801012[66] = 1;
   out_8763257145105801012[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8763257145105801012[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8763257145105801012[69] = 0;
   out_8763257145105801012[70] = 0;
   out_8763257145105801012[71] = 0;
   out_8763257145105801012[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8763257145105801012[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8763257145105801012[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8763257145105801012[75] = 0;
   out_8763257145105801012[76] = 0;
   out_8763257145105801012[77] = 0;
   out_8763257145105801012[78] = 0;
   out_8763257145105801012[79] = 0;
   out_8763257145105801012[80] = 0;
   out_8763257145105801012[81] = 0;
   out_8763257145105801012[82] = 0;
   out_8763257145105801012[83] = 0;
   out_8763257145105801012[84] = 0;
   out_8763257145105801012[85] = 0;
   out_8763257145105801012[86] = 0;
   out_8763257145105801012[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8763257145105801012[88] = 1;
   out_8763257145105801012[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8763257145105801012[90] = 0;
   out_8763257145105801012[91] = 0;
   out_8763257145105801012[92] = 0;
   out_8763257145105801012[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8763257145105801012[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8763257145105801012[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8763257145105801012[96] = 0;
   out_8763257145105801012[97] = 0;
   out_8763257145105801012[98] = 0;
   out_8763257145105801012[99] = 0;
   out_8763257145105801012[100] = 0;
   out_8763257145105801012[101] = 0;
   out_8763257145105801012[102] = 0;
   out_8763257145105801012[103] = 0;
   out_8763257145105801012[104] = 0;
   out_8763257145105801012[105] = 0;
   out_8763257145105801012[106] = 0;
   out_8763257145105801012[107] = 0;
   out_8763257145105801012[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8763257145105801012[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8763257145105801012[110] = 1;
   out_8763257145105801012[111] = 0;
   out_8763257145105801012[112] = 0;
   out_8763257145105801012[113] = 0;
   out_8763257145105801012[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8763257145105801012[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8763257145105801012[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8763257145105801012[117] = 0;
   out_8763257145105801012[118] = 0;
   out_8763257145105801012[119] = 0;
   out_8763257145105801012[120] = 0;
   out_8763257145105801012[121] = 0;
   out_8763257145105801012[122] = 0;
   out_8763257145105801012[123] = 0;
   out_8763257145105801012[124] = 0;
   out_8763257145105801012[125] = 0;
   out_8763257145105801012[126] = 0;
   out_8763257145105801012[127] = 0;
   out_8763257145105801012[128] = 0;
   out_8763257145105801012[129] = 0;
   out_8763257145105801012[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8763257145105801012[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8763257145105801012[132] = 1;
   out_8763257145105801012[133] = 0;
   out_8763257145105801012[134] = 0;
   out_8763257145105801012[135] = 0;
   out_8763257145105801012[136] = 0;
   out_8763257145105801012[137] = 0;
   out_8763257145105801012[138] = 0;
   out_8763257145105801012[139] = 0;
   out_8763257145105801012[140] = 0;
   out_8763257145105801012[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8763257145105801012[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8763257145105801012[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8763257145105801012[144] = 0;
   out_8763257145105801012[145] = 0;
   out_8763257145105801012[146] = 0;
   out_8763257145105801012[147] = 0;
   out_8763257145105801012[148] = 0;
   out_8763257145105801012[149] = 0;
   out_8763257145105801012[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8763257145105801012[151] = 0;
   out_8763257145105801012[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8763257145105801012[153] = 0;
   out_8763257145105801012[154] = 1;
   out_8763257145105801012[155] = 0;
   out_8763257145105801012[156] = 0;
   out_8763257145105801012[157] = 0;
   out_8763257145105801012[158] = 0;
   out_8763257145105801012[159] = 0;
   out_8763257145105801012[160] = 0;
   out_8763257145105801012[161] = 0;
   out_8763257145105801012[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8763257145105801012[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8763257145105801012[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8763257145105801012[165] = 0;
   out_8763257145105801012[166] = 0;
   out_8763257145105801012[167] = 0;
   out_8763257145105801012[168] = 0;
   out_8763257145105801012[169] = 0;
   out_8763257145105801012[170] = 0;
   out_8763257145105801012[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8763257145105801012[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8763257145105801012[173] = 0;
   out_8763257145105801012[174] = 0;
   out_8763257145105801012[175] = 0;
   out_8763257145105801012[176] = 1;
   out_8763257145105801012[177] = 0;
   out_8763257145105801012[178] = 0;
   out_8763257145105801012[179] = 0;
   out_8763257145105801012[180] = 0;
   out_8763257145105801012[181] = 0;
   out_8763257145105801012[182] = 0;
   out_8763257145105801012[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8763257145105801012[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8763257145105801012[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8763257145105801012[186] = 0;
   out_8763257145105801012[187] = 0;
   out_8763257145105801012[188] = 0;
   out_8763257145105801012[189] = 0;
   out_8763257145105801012[190] = 0;
   out_8763257145105801012[191] = 0;
   out_8763257145105801012[192] = 0;
   out_8763257145105801012[193] = 0;
   out_8763257145105801012[194] = 0;
   out_8763257145105801012[195] = 0;
   out_8763257145105801012[196] = 0;
   out_8763257145105801012[197] = 0;
   out_8763257145105801012[198] = 1;
   out_8763257145105801012[199] = 0;
   out_8763257145105801012[200] = 0;
   out_8763257145105801012[201] = 0;
   out_8763257145105801012[202] = 0;
   out_8763257145105801012[203] = 0;
   out_8763257145105801012[204] = 0;
   out_8763257145105801012[205] = 0;
   out_8763257145105801012[206] = 0;
   out_8763257145105801012[207] = 0;
   out_8763257145105801012[208] = 0;
   out_8763257145105801012[209] = 0;
   out_8763257145105801012[210] = 0;
   out_8763257145105801012[211] = 0;
   out_8763257145105801012[212] = 0;
   out_8763257145105801012[213] = 0;
   out_8763257145105801012[214] = 0;
   out_8763257145105801012[215] = 0;
   out_8763257145105801012[216] = 0;
   out_8763257145105801012[217] = 0;
   out_8763257145105801012[218] = 0;
   out_8763257145105801012[219] = 0;
   out_8763257145105801012[220] = 1;
   out_8763257145105801012[221] = 0;
   out_8763257145105801012[222] = 0;
   out_8763257145105801012[223] = 0;
   out_8763257145105801012[224] = 0;
   out_8763257145105801012[225] = 0;
   out_8763257145105801012[226] = 0;
   out_8763257145105801012[227] = 0;
   out_8763257145105801012[228] = 0;
   out_8763257145105801012[229] = 0;
   out_8763257145105801012[230] = 0;
   out_8763257145105801012[231] = 0;
   out_8763257145105801012[232] = 0;
   out_8763257145105801012[233] = 0;
   out_8763257145105801012[234] = 0;
   out_8763257145105801012[235] = 0;
   out_8763257145105801012[236] = 0;
   out_8763257145105801012[237] = 0;
   out_8763257145105801012[238] = 0;
   out_8763257145105801012[239] = 0;
   out_8763257145105801012[240] = 0;
   out_8763257145105801012[241] = 0;
   out_8763257145105801012[242] = 1;
   out_8763257145105801012[243] = 0;
   out_8763257145105801012[244] = 0;
   out_8763257145105801012[245] = 0;
   out_8763257145105801012[246] = 0;
   out_8763257145105801012[247] = 0;
   out_8763257145105801012[248] = 0;
   out_8763257145105801012[249] = 0;
   out_8763257145105801012[250] = 0;
   out_8763257145105801012[251] = 0;
   out_8763257145105801012[252] = 0;
   out_8763257145105801012[253] = 0;
   out_8763257145105801012[254] = 0;
   out_8763257145105801012[255] = 0;
   out_8763257145105801012[256] = 0;
   out_8763257145105801012[257] = 0;
   out_8763257145105801012[258] = 0;
   out_8763257145105801012[259] = 0;
   out_8763257145105801012[260] = 0;
   out_8763257145105801012[261] = 0;
   out_8763257145105801012[262] = 0;
   out_8763257145105801012[263] = 0;
   out_8763257145105801012[264] = 1;
   out_8763257145105801012[265] = 0;
   out_8763257145105801012[266] = 0;
   out_8763257145105801012[267] = 0;
   out_8763257145105801012[268] = 0;
   out_8763257145105801012[269] = 0;
   out_8763257145105801012[270] = 0;
   out_8763257145105801012[271] = 0;
   out_8763257145105801012[272] = 0;
   out_8763257145105801012[273] = 0;
   out_8763257145105801012[274] = 0;
   out_8763257145105801012[275] = 0;
   out_8763257145105801012[276] = 0;
   out_8763257145105801012[277] = 0;
   out_8763257145105801012[278] = 0;
   out_8763257145105801012[279] = 0;
   out_8763257145105801012[280] = 0;
   out_8763257145105801012[281] = 0;
   out_8763257145105801012[282] = 0;
   out_8763257145105801012[283] = 0;
   out_8763257145105801012[284] = 0;
   out_8763257145105801012[285] = 0;
   out_8763257145105801012[286] = 1;
   out_8763257145105801012[287] = 0;
   out_8763257145105801012[288] = 0;
   out_8763257145105801012[289] = 0;
   out_8763257145105801012[290] = 0;
   out_8763257145105801012[291] = 0;
   out_8763257145105801012[292] = 0;
   out_8763257145105801012[293] = 0;
   out_8763257145105801012[294] = 0;
   out_8763257145105801012[295] = 0;
   out_8763257145105801012[296] = 0;
   out_8763257145105801012[297] = 0;
   out_8763257145105801012[298] = 0;
   out_8763257145105801012[299] = 0;
   out_8763257145105801012[300] = 0;
   out_8763257145105801012[301] = 0;
   out_8763257145105801012[302] = 0;
   out_8763257145105801012[303] = 0;
   out_8763257145105801012[304] = 0;
   out_8763257145105801012[305] = 0;
   out_8763257145105801012[306] = 0;
   out_8763257145105801012[307] = 0;
   out_8763257145105801012[308] = 1;
   out_8763257145105801012[309] = 0;
   out_8763257145105801012[310] = 0;
   out_8763257145105801012[311] = 0;
   out_8763257145105801012[312] = 0;
   out_8763257145105801012[313] = 0;
   out_8763257145105801012[314] = 0;
   out_8763257145105801012[315] = 0;
   out_8763257145105801012[316] = 0;
   out_8763257145105801012[317] = 0;
   out_8763257145105801012[318] = 0;
   out_8763257145105801012[319] = 0;
   out_8763257145105801012[320] = 0;
   out_8763257145105801012[321] = 0;
   out_8763257145105801012[322] = 0;
   out_8763257145105801012[323] = 0;
   out_8763257145105801012[324] = 0;
   out_8763257145105801012[325] = 0;
   out_8763257145105801012[326] = 0;
   out_8763257145105801012[327] = 0;
   out_8763257145105801012[328] = 0;
   out_8763257145105801012[329] = 0;
   out_8763257145105801012[330] = 1;
   out_8763257145105801012[331] = 0;
   out_8763257145105801012[332] = 0;
   out_8763257145105801012[333] = 0;
   out_8763257145105801012[334] = 0;
   out_8763257145105801012[335] = 0;
   out_8763257145105801012[336] = 0;
   out_8763257145105801012[337] = 0;
   out_8763257145105801012[338] = 0;
   out_8763257145105801012[339] = 0;
   out_8763257145105801012[340] = 0;
   out_8763257145105801012[341] = 0;
   out_8763257145105801012[342] = 0;
   out_8763257145105801012[343] = 0;
   out_8763257145105801012[344] = 0;
   out_8763257145105801012[345] = 0;
   out_8763257145105801012[346] = 0;
   out_8763257145105801012[347] = 0;
   out_8763257145105801012[348] = 0;
   out_8763257145105801012[349] = 0;
   out_8763257145105801012[350] = 0;
   out_8763257145105801012[351] = 0;
   out_8763257145105801012[352] = 1;
   out_8763257145105801012[353] = 0;
   out_8763257145105801012[354] = 0;
   out_8763257145105801012[355] = 0;
   out_8763257145105801012[356] = 0;
   out_8763257145105801012[357] = 0;
   out_8763257145105801012[358] = 0;
   out_8763257145105801012[359] = 0;
   out_8763257145105801012[360] = 0;
   out_8763257145105801012[361] = 0;
   out_8763257145105801012[362] = 0;
   out_8763257145105801012[363] = 0;
   out_8763257145105801012[364] = 0;
   out_8763257145105801012[365] = 0;
   out_8763257145105801012[366] = 0;
   out_8763257145105801012[367] = 0;
   out_8763257145105801012[368] = 0;
   out_8763257145105801012[369] = 0;
   out_8763257145105801012[370] = 0;
   out_8763257145105801012[371] = 0;
   out_8763257145105801012[372] = 0;
   out_8763257145105801012[373] = 0;
   out_8763257145105801012[374] = 1;
   out_8763257145105801012[375] = 0;
   out_8763257145105801012[376] = 0;
   out_8763257145105801012[377] = 0;
   out_8763257145105801012[378] = 0;
   out_8763257145105801012[379] = 0;
   out_8763257145105801012[380] = 0;
   out_8763257145105801012[381] = 0;
   out_8763257145105801012[382] = 0;
   out_8763257145105801012[383] = 0;
   out_8763257145105801012[384] = 0;
   out_8763257145105801012[385] = 0;
   out_8763257145105801012[386] = 0;
   out_8763257145105801012[387] = 0;
   out_8763257145105801012[388] = 0;
   out_8763257145105801012[389] = 0;
   out_8763257145105801012[390] = 0;
   out_8763257145105801012[391] = 0;
   out_8763257145105801012[392] = 0;
   out_8763257145105801012[393] = 0;
   out_8763257145105801012[394] = 0;
   out_8763257145105801012[395] = 0;
   out_8763257145105801012[396] = 1;
   out_8763257145105801012[397] = 0;
   out_8763257145105801012[398] = 0;
   out_8763257145105801012[399] = 0;
   out_8763257145105801012[400] = 0;
   out_8763257145105801012[401] = 0;
   out_8763257145105801012[402] = 0;
   out_8763257145105801012[403] = 0;
   out_8763257145105801012[404] = 0;
   out_8763257145105801012[405] = 0;
   out_8763257145105801012[406] = 0;
   out_8763257145105801012[407] = 0;
   out_8763257145105801012[408] = 0;
   out_8763257145105801012[409] = 0;
   out_8763257145105801012[410] = 0;
   out_8763257145105801012[411] = 0;
   out_8763257145105801012[412] = 0;
   out_8763257145105801012[413] = 0;
   out_8763257145105801012[414] = 0;
   out_8763257145105801012[415] = 0;
   out_8763257145105801012[416] = 0;
   out_8763257145105801012[417] = 0;
   out_8763257145105801012[418] = 1;
   out_8763257145105801012[419] = 0;
   out_8763257145105801012[420] = 0;
   out_8763257145105801012[421] = 0;
   out_8763257145105801012[422] = 0;
   out_8763257145105801012[423] = 0;
   out_8763257145105801012[424] = 0;
   out_8763257145105801012[425] = 0;
   out_8763257145105801012[426] = 0;
   out_8763257145105801012[427] = 0;
   out_8763257145105801012[428] = 0;
   out_8763257145105801012[429] = 0;
   out_8763257145105801012[430] = 0;
   out_8763257145105801012[431] = 0;
   out_8763257145105801012[432] = 0;
   out_8763257145105801012[433] = 0;
   out_8763257145105801012[434] = 0;
   out_8763257145105801012[435] = 0;
   out_8763257145105801012[436] = 0;
   out_8763257145105801012[437] = 0;
   out_8763257145105801012[438] = 0;
   out_8763257145105801012[439] = 0;
   out_8763257145105801012[440] = 1;
}
void h_4(double *state, double *unused, double *out_4393751991820450146) {
   out_4393751991820450146[0] = state[10] + state[13];
   out_4393751991820450146[1] = state[11] + state[14];
   out_4393751991820450146[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1749816418172289953) {
   out_1749816418172289953[0] = 0;
   out_1749816418172289953[1] = 0;
   out_1749816418172289953[2] = 0;
   out_1749816418172289953[3] = 0;
   out_1749816418172289953[4] = 0;
   out_1749816418172289953[5] = 0;
   out_1749816418172289953[6] = 0;
   out_1749816418172289953[7] = 0;
   out_1749816418172289953[8] = 0;
   out_1749816418172289953[9] = 0;
   out_1749816418172289953[10] = 1;
   out_1749816418172289953[11] = 0;
   out_1749816418172289953[12] = 0;
   out_1749816418172289953[13] = 1;
   out_1749816418172289953[14] = 0;
   out_1749816418172289953[15] = 0;
   out_1749816418172289953[16] = 0;
   out_1749816418172289953[17] = 0;
   out_1749816418172289953[18] = 0;
   out_1749816418172289953[19] = 0;
   out_1749816418172289953[20] = 0;
   out_1749816418172289953[21] = 0;
   out_1749816418172289953[22] = 0;
   out_1749816418172289953[23] = 0;
   out_1749816418172289953[24] = 0;
   out_1749816418172289953[25] = 0;
   out_1749816418172289953[26] = 0;
   out_1749816418172289953[27] = 0;
   out_1749816418172289953[28] = 0;
   out_1749816418172289953[29] = 0;
   out_1749816418172289953[30] = 0;
   out_1749816418172289953[31] = 0;
   out_1749816418172289953[32] = 0;
   out_1749816418172289953[33] = 1;
   out_1749816418172289953[34] = 0;
   out_1749816418172289953[35] = 0;
   out_1749816418172289953[36] = 1;
   out_1749816418172289953[37] = 0;
   out_1749816418172289953[38] = 0;
   out_1749816418172289953[39] = 0;
   out_1749816418172289953[40] = 0;
   out_1749816418172289953[41] = 0;
   out_1749816418172289953[42] = 0;
   out_1749816418172289953[43] = 0;
   out_1749816418172289953[44] = 0;
   out_1749816418172289953[45] = 0;
   out_1749816418172289953[46] = 0;
   out_1749816418172289953[47] = 0;
   out_1749816418172289953[48] = 0;
   out_1749816418172289953[49] = 0;
   out_1749816418172289953[50] = 0;
   out_1749816418172289953[51] = 0;
   out_1749816418172289953[52] = 0;
   out_1749816418172289953[53] = 0;
   out_1749816418172289953[54] = 0;
   out_1749816418172289953[55] = 0;
   out_1749816418172289953[56] = 1;
   out_1749816418172289953[57] = 0;
   out_1749816418172289953[58] = 0;
   out_1749816418172289953[59] = 1;
   out_1749816418172289953[60] = 0;
   out_1749816418172289953[61] = 0;
   out_1749816418172289953[62] = 0;
   out_1749816418172289953[63] = 0;
   out_1749816418172289953[64] = 0;
   out_1749816418172289953[65] = 0;
}
void h_9(double *state, double *unused, double *out_7635015471942411802) {
   out_7635015471942411802[0] = state[10];
   out_7635015471942411802[1] = state[11];
   out_7635015471942411802[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5537402517092157517) {
   out_5537402517092157517[0] = 0;
   out_5537402517092157517[1] = 0;
   out_5537402517092157517[2] = 0;
   out_5537402517092157517[3] = 0;
   out_5537402517092157517[4] = 0;
   out_5537402517092157517[5] = 0;
   out_5537402517092157517[6] = 0;
   out_5537402517092157517[7] = 0;
   out_5537402517092157517[8] = 0;
   out_5537402517092157517[9] = 0;
   out_5537402517092157517[10] = 1;
   out_5537402517092157517[11] = 0;
   out_5537402517092157517[12] = 0;
   out_5537402517092157517[13] = 0;
   out_5537402517092157517[14] = 0;
   out_5537402517092157517[15] = 0;
   out_5537402517092157517[16] = 0;
   out_5537402517092157517[17] = 0;
   out_5537402517092157517[18] = 0;
   out_5537402517092157517[19] = 0;
   out_5537402517092157517[20] = 0;
   out_5537402517092157517[21] = 0;
   out_5537402517092157517[22] = 0;
   out_5537402517092157517[23] = 0;
   out_5537402517092157517[24] = 0;
   out_5537402517092157517[25] = 0;
   out_5537402517092157517[26] = 0;
   out_5537402517092157517[27] = 0;
   out_5537402517092157517[28] = 0;
   out_5537402517092157517[29] = 0;
   out_5537402517092157517[30] = 0;
   out_5537402517092157517[31] = 0;
   out_5537402517092157517[32] = 0;
   out_5537402517092157517[33] = 1;
   out_5537402517092157517[34] = 0;
   out_5537402517092157517[35] = 0;
   out_5537402517092157517[36] = 0;
   out_5537402517092157517[37] = 0;
   out_5537402517092157517[38] = 0;
   out_5537402517092157517[39] = 0;
   out_5537402517092157517[40] = 0;
   out_5537402517092157517[41] = 0;
   out_5537402517092157517[42] = 0;
   out_5537402517092157517[43] = 0;
   out_5537402517092157517[44] = 0;
   out_5537402517092157517[45] = 0;
   out_5537402517092157517[46] = 0;
   out_5537402517092157517[47] = 0;
   out_5537402517092157517[48] = 0;
   out_5537402517092157517[49] = 0;
   out_5537402517092157517[50] = 0;
   out_5537402517092157517[51] = 0;
   out_5537402517092157517[52] = 0;
   out_5537402517092157517[53] = 0;
   out_5537402517092157517[54] = 0;
   out_5537402517092157517[55] = 0;
   out_5537402517092157517[56] = 1;
   out_5537402517092157517[57] = 0;
   out_5537402517092157517[58] = 0;
   out_5537402517092157517[59] = 0;
   out_5537402517092157517[60] = 0;
   out_5537402517092157517[61] = 0;
   out_5537402517092157517[62] = 0;
   out_5537402517092157517[63] = 0;
   out_5537402517092157517[64] = 0;
   out_5537402517092157517[65] = 0;
}
void h_10(double *state, double *unused, double *out_4654836922306288541) {
   out_4654836922306288541[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4654836922306288541[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4654836922306288541[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7114843905500366371) {
   out_7114843905500366371[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7114843905500366371[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7114843905500366371[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7114843905500366371[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7114843905500366371[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7114843905500366371[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7114843905500366371[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7114843905500366371[7] = 0;
   out_7114843905500366371[8] = 0;
   out_7114843905500366371[9] = 0;
   out_7114843905500366371[10] = 0;
   out_7114843905500366371[11] = 0;
   out_7114843905500366371[12] = 0;
   out_7114843905500366371[13] = 0;
   out_7114843905500366371[14] = 0;
   out_7114843905500366371[15] = 0;
   out_7114843905500366371[16] = 1;
   out_7114843905500366371[17] = 0;
   out_7114843905500366371[18] = 0;
   out_7114843905500366371[19] = 1;
   out_7114843905500366371[20] = 0;
   out_7114843905500366371[21] = 0;
   out_7114843905500366371[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7114843905500366371[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7114843905500366371[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7114843905500366371[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7114843905500366371[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7114843905500366371[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7114843905500366371[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7114843905500366371[29] = 0;
   out_7114843905500366371[30] = 0;
   out_7114843905500366371[31] = 0;
   out_7114843905500366371[32] = 0;
   out_7114843905500366371[33] = 0;
   out_7114843905500366371[34] = 0;
   out_7114843905500366371[35] = 0;
   out_7114843905500366371[36] = 0;
   out_7114843905500366371[37] = 0;
   out_7114843905500366371[38] = 0;
   out_7114843905500366371[39] = 1;
   out_7114843905500366371[40] = 0;
   out_7114843905500366371[41] = 0;
   out_7114843905500366371[42] = 1;
   out_7114843905500366371[43] = 0;
   out_7114843905500366371[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7114843905500366371[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7114843905500366371[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7114843905500366371[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7114843905500366371[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7114843905500366371[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7114843905500366371[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7114843905500366371[51] = 0;
   out_7114843905500366371[52] = 0;
   out_7114843905500366371[53] = 0;
   out_7114843905500366371[54] = 0;
   out_7114843905500366371[55] = 0;
   out_7114843905500366371[56] = 0;
   out_7114843905500366371[57] = 0;
   out_7114843905500366371[58] = 0;
   out_7114843905500366371[59] = 0;
   out_7114843905500366371[60] = 0;
   out_7114843905500366371[61] = 0;
   out_7114843905500366371[62] = 1;
   out_7114843905500366371[63] = 0;
   out_7114843905500366371[64] = 0;
   out_7114843905500366371[65] = 1;
}
void h_12(double *state, double *unused, double *out_8455142581421422448) {
   out_8455142581421422448[0] = state[0];
   out_8455142581421422448[1] = state[1];
   out_8455142581421422448[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8131074795215022949) {
   out_8131074795215022949[0] = 1;
   out_8131074795215022949[1] = 0;
   out_8131074795215022949[2] = 0;
   out_8131074795215022949[3] = 0;
   out_8131074795215022949[4] = 0;
   out_8131074795215022949[5] = 0;
   out_8131074795215022949[6] = 0;
   out_8131074795215022949[7] = 0;
   out_8131074795215022949[8] = 0;
   out_8131074795215022949[9] = 0;
   out_8131074795215022949[10] = 0;
   out_8131074795215022949[11] = 0;
   out_8131074795215022949[12] = 0;
   out_8131074795215022949[13] = 0;
   out_8131074795215022949[14] = 0;
   out_8131074795215022949[15] = 0;
   out_8131074795215022949[16] = 0;
   out_8131074795215022949[17] = 0;
   out_8131074795215022949[18] = 0;
   out_8131074795215022949[19] = 0;
   out_8131074795215022949[20] = 0;
   out_8131074795215022949[21] = 0;
   out_8131074795215022949[22] = 0;
   out_8131074795215022949[23] = 1;
   out_8131074795215022949[24] = 0;
   out_8131074795215022949[25] = 0;
   out_8131074795215022949[26] = 0;
   out_8131074795215022949[27] = 0;
   out_8131074795215022949[28] = 0;
   out_8131074795215022949[29] = 0;
   out_8131074795215022949[30] = 0;
   out_8131074795215022949[31] = 0;
   out_8131074795215022949[32] = 0;
   out_8131074795215022949[33] = 0;
   out_8131074795215022949[34] = 0;
   out_8131074795215022949[35] = 0;
   out_8131074795215022949[36] = 0;
   out_8131074795215022949[37] = 0;
   out_8131074795215022949[38] = 0;
   out_8131074795215022949[39] = 0;
   out_8131074795215022949[40] = 0;
   out_8131074795215022949[41] = 0;
   out_8131074795215022949[42] = 0;
   out_8131074795215022949[43] = 0;
   out_8131074795215022949[44] = 0;
   out_8131074795215022949[45] = 0;
   out_8131074795215022949[46] = 1;
   out_8131074795215022949[47] = 0;
   out_8131074795215022949[48] = 0;
   out_8131074795215022949[49] = 0;
   out_8131074795215022949[50] = 0;
   out_8131074795215022949[51] = 0;
   out_8131074795215022949[52] = 0;
   out_8131074795215022949[53] = 0;
   out_8131074795215022949[54] = 0;
   out_8131074795215022949[55] = 0;
   out_8131074795215022949[56] = 0;
   out_8131074795215022949[57] = 0;
   out_8131074795215022949[58] = 0;
   out_8131074795215022949[59] = 0;
   out_8131074795215022949[60] = 0;
   out_8131074795215022949[61] = 0;
   out_8131074795215022949[62] = 0;
   out_8131074795215022949[63] = 0;
   out_8131074795215022949[64] = 0;
   out_8131074795215022949[65] = 0;
}
void h_35(double *state, double *unused, double *out_5602094957643603974) {
   out_5602094957643603974[0] = state[7];
   out_5602094957643603974[1] = state[8];
   out_5602094957643603974[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1616845639200317423) {
   out_1616845639200317423[0] = 0;
   out_1616845639200317423[1] = 0;
   out_1616845639200317423[2] = 0;
   out_1616845639200317423[3] = 0;
   out_1616845639200317423[4] = 0;
   out_1616845639200317423[5] = 0;
   out_1616845639200317423[6] = 0;
   out_1616845639200317423[7] = 1;
   out_1616845639200317423[8] = 0;
   out_1616845639200317423[9] = 0;
   out_1616845639200317423[10] = 0;
   out_1616845639200317423[11] = 0;
   out_1616845639200317423[12] = 0;
   out_1616845639200317423[13] = 0;
   out_1616845639200317423[14] = 0;
   out_1616845639200317423[15] = 0;
   out_1616845639200317423[16] = 0;
   out_1616845639200317423[17] = 0;
   out_1616845639200317423[18] = 0;
   out_1616845639200317423[19] = 0;
   out_1616845639200317423[20] = 0;
   out_1616845639200317423[21] = 0;
   out_1616845639200317423[22] = 0;
   out_1616845639200317423[23] = 0;
   out_1616845639200317423[24] = 0;
   out_1616845639200317423[25] = 0;
   out_1616845639200317423[26] = 0;
   out_1616845639200317423[27] = 0;
   out_1616845639200317423[28] = 0;
   out_1616845639200317423[29] = 0;
   out_1616845639200317423[30] = 1;
   out_1616845639200317423[31] = 0;
   out_1616845639200317423[32] = 0;
   out_1616845639200317423[33] = 0;
   out_1616845639200317423[34] = 0;
   out_1616845639200317423[35] = 0;
   out_1616845639200317423[36] = 0;
   out_1616845639200317423[37] = 0;
   out_1616845639200317423[38] = 0;
   out_1616845639200317423[39] = 0;
   out_1616845639200317423[40] = 0;
   out_1616845639200317423[41] = 0;
   out_1616845639200317423[42] = 0;
   out_1616845639200317423[43] = 0;
   out_1616845639200317423[44] = 0;
   out_1616845639200317423[45] = 0;
   out_1616845639200317423[46] = 0;
   out_1616845639200317423[47] = 0;
   out_1616845639200317423[48] = 0;
   out_1616845639200317423[49] = 0;
   out_1616845639200317423[50] = 0;
   out_1616845639200317423[51] = 0;
   out_1616845639200317423[52] = 0;
   out_1616845639200317423[53] = 1;
   out_1616845639200317423[54] = 0;
   out_1616845639200317423[55] = 0;
   out_1616845639200317423[56] = 0;
   out_1616845639200317423[57] = 0;
   out_1616845639200317423[58] = 0;
   out_1616845639200317423[59] = 0;
   out_1616845639200317423[60] = 0;
   out_1616845639200317423[61] = 0;
   out_1616845639200317423[62] = 0;
   out_1616845639200317423[63] = 0;
   out_1616845639200317423[64] = 0;
   out_1616845639200317423[65] = 0;
}
void h_32(double *state, double *unused, double *out_5255635781881463689) {
   out_5255635781881463689[0] = state[3];
   out_5255635781881463689[1] = state[4];
   out_5255635781881463689[2] = state[5];
   out_5255635781881463689[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2989652337278612786) {
   out_2989652337278612786[0] = 0;
   out_2989652337278612786[1] = 0;
   out_2989652337278612786[2] = 0;
   out_2989652337278612786[3] = 1;
   out_2989652337278612786[4] = 0;
   out_2989652337278612786[5] = 0;
   out_2989652337278612786[6] = 0;
   out_2989652337278612786[7] = 0;
   out_2989652337278612786[8] = 0;
   out_2989652337278612786[9] = 0;
   out_2989652337278612786[10] = 0;
   out_2989652337278612786[11] = 0;
   out_2989652337278612786[12] = 0;
   out_2989652337278612786[13] = 0;
   out_2989652337278612786[14] = 0;
   out_2989652337278612786[15] = 0;
   out_2989652337278612786[16] = 0;
   out_2989652337278612786[17] = 0;
   out_2989652337278612786[18] = 0;
   out_2989652337278612786[19] = 0;
   out_2989652337278612786[20] = 0;
   out_2989652337278612786[21] = 0;
   out_2989652337278612786[22] = 0;
   out_2989652337278612786[23] = 0;
   out_2989652337278612786[24] = 0;
   out_2989652337278612786[25] = 0;
   out_2989652337278612786[26] = 1;
   out_2989652337278612786[27] = 0;
   out_2989652337278612786[28] = 0;
   out_2989652337278612786[29] = 0;
   out_2989652337278612786[30] = 0;
   out_2989652337278612786[31] = 0;
   out_2989652337278612786[32] = 0;
   out_2989652337278612786[33] = 0;
   out_2989652337278612786[34] = 0;
   out_2989652337278612786[35] = 0;
   out_2989652337278612786[36] = 0;
   out_2989652337278612786[37] = 0;
   out_2989652337278612786[38] = 0;
   out_2989652337278612786[39] = 0;
   out_2989652337278612786[40] = 0;
   out_2989652337278612786[41] = 0;
   out_2989652337278612786[42] = 0;
   out_2989652337278612786[43] = 0;
   out_2989652337278612786[44] = 0;
   out_2989652337278612786[45] = 0;
   out_2989652337278612786[46] = 0;
   out_2989652337278612786[47] = 0;
   out_2989652337278612786[48] = 0;
   out_2989652337278612786[49] = 1;
   out_2989652337278612786[50] = 0;
   out_2989652337278612786[51] = 0;
   out_2989652337278612786[52] = 0;
   out_2989652337278612786[53] = 0;
   out_2989652337278612786[54] = 0;
   out_2989652337278612786[55] = 0;
   out_2989652337278612786[56] = 0;
   out_2989652337278612786[57] = 0;
   out_2989652337278612786[58] = 0;
   out_2989652337278612786[59] = 0;
   out_2989652337278612786[60] = 0;
   out_2989652337278612786[61] = 0;
   out_2989652337278612786[62] = 0;
   out_2989652337278612786[63] = 0;
   out_2989652337278612786[64] = 0;
   out_2989652337278612786[65] = 0;
   out_2989652337278612786[66] = 0;
   out_2989652337278612786[67] = 0;
   out_2989652337278612786[68] = 0;
   out_2989652337278612786[69] = 0;
   out_2989652337278612786[70] = 0;
   out_2989652337278612786[71] = 0;
   out_2989652337278612786[72] = 1;
   out_2989652337278612786[73] = 0;
   out_2989652337278612786[74] = 0;
   out_2989652337278612786[75] = 0;
   out_2989652337278612786[76] = 0;
   out_2989652337278612786[77] = 0;
   out_2989652337278612786[78] = 0;
   out_2989652337278612786[79] = 0;
   out_2989652337278612786[80] = 0;
   out_2989652337278612786[81] = 0;
   out_2989652337278612786[82] = 0;
   out_2989652337278612786[83] = 0;
   out_2989652337278612786[84] = 0;
   out_2989652337278612786[85] = 0;
   out_2989652337278612786[86] = 0;
   out_2989652337278612786[87] = 0;
}
void h_13(double *state, double *unused, double *out_2909743526958408903) {
   out_2909743526958408903[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2909743526958408903[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2909743526958408903[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4042123882687789281) {
   out_4042123882687789281[0] = 0;
   out_4042123882687789281[1] = 0;
   out_4042123882687789281[2] = 0;
   out_4042123882687789281[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4042123882687789281[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4042123882687789281[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4042123882687789281[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4042123882687789281[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4042123882687789281[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4042123882687789281[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4042123882687789281[10] = 0;
   out_4042123882687789281[11] = 0;
   out_4042123882687789281[12] = 0;
   out_4042123882687789281[13] = 0;
   out_4042123882687789281[14] = 0;
   out_4042123882687789281[15] = 0;
   out_4042123882687789281[16] = 0;
   out_4042123882687789281[17] = 0;
   out_4042123882687789281[18] = 0;
   out_4042123882687789281[19] = 0;
   out_4042123882687789281[20] = 0;
   out_4042123882687789281[21] = 0;
   out_4042123882687789281[22] = 0;
   out_4042123882687789281[23] = 0;
   out_4042123882687789281[24] = 0;
   out_4042123882687789281[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4042123882687789281[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4042123882687789281[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4042123882687789281[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4042123882687789281[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4042123882687789281[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4042123882687789281[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4042123882687789281[32] = 0;
   out_4042123882687789281[33] = 0;
   out_4042123882687789281[34] = 0;
   out_4042123882687789281[35] = 0;
   out_4042123882687789281[36] = 0;
   out_4042123882687789281[37] = 0;
   out_4042123882687789281[38] = 0;
   out_4042123882687789281[39] = 0;
   out_4042123882687789281[40] = 0;
   out_4042123882687789281[41] = 0;
   out_4042123882687789281[42] = 0;
   out_4042123882687789281[43] = 0;
   out_4042123882687789281[44] = 0;
   out_4042123882687789281[45] = 0;
   out_4042123882687789281[46] = 0;
   out_4042123882687789281[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4042123882687789281[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4042123882687789281[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4042123882687789281[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4042123882687789281[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4042123882687789281[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4042123882687789281[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4042123882687789281[54] = 0;
   out_4042123882687789281[55] = 0;
   out_4042123882687789281[56] = 0;
   out_4042123882687789281[57] = 0;
   out_4042123882687789281[58] = 0;
   out_4042123882687789281[59] = 0;
   out_4042123882687789281[60] = 0;
   out_4042123882687789281[61] = 0;
   out_4042123882687789281[62] = 0;
   out_4042123882687789281[63] = 0;
   out_4042123882687789281[64] = 0;
   out_4042123882687789281[65] = 0;
}
void h_14(double *state, double *unused, double *out_7635015471942411802) {
   out_7635015471942411802[0] = state[10];
   out_7635015471942411802[1] = state[11];
   out_7635015471942411802[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5537402517092157517) {
   out_5537402517092157517[0] = 0;
   out_5537402517092157517[1] = 0;
   out_5537402517092157517[2] = 0;
   out_5537402517092157517[3] = 0;
   out_5537402517092157517[4] = 0;
   out_5537402517092157517[5] = 0;
   out_5537402517092157517[6] = 0;
   out_5537402517092157517[7] = 0;
   out_5537402517092157517[8] = 0;
   out_5537402517092157517[9] = 0;
   out_5537402517092157517[10] = 1;
   out_5537402517092157517[11] = 0;
   out_5537402517092157517[12] = 0;
   out_5537402517092157517[13] = 0;
   out_5537402517092157517[14] = 0;
   out_5537402517092157517[15] = 0;
   out_5537402517092157517[16] = 0;
   out_5537402517092157517[17] = 0;
   out_5537402517092157517[18] = 0;
   out_5537402517092157517[19] = 0;
   out_5537402517092157517[20] = 0;
   out_5537402517092157517[21] = 0;
   out_5537402517092157517[22] = 0;
   out_5537402517092157517[23] = 0;
   out_5537402517092157517[24] = 0;
   out_5537402517092157517[25] = 0;
   out_5537402517092157517[26] = 0;
   out_5537402517092157517[27] = 0;
   out_5537402517092157517[28] = 0;
   out_5537402517092157517[29] = 0;
   out_5537402517092157517[30] = 0;
   out_5537402517092157517[31] = 0;
   out_5537402517092157517[32] = 0;
   out_5537402517092157517[33] = 1;
   out_5537402517092157517[34] = 0;
   out_5537402517092157517[35] = 0;
   out_5537402517092157517[36] = 0;
   out_5537402517092157517[37] = 0;
   out_5537402517092157517[38] = 0;
   out_5537402517092157517[39] = 0;
   out_5537402517092157517[40] = 0;
   out_5537402517092157517[41] = 0;
   out_5537402517092157517[42] = 0;
   out_5537402517092157517[43] = 0;
   out_5537402517092157517[44] = 0;
   out_5537402517092157517[45] = 0;
   out_5537402517092157517[46] = 0;
   out_5537402517092157517[47] = 0;
   out_5537402517092157517[48] = 0;
   out_5537402517092157517[49] = 0;
   out_5537402517092157517[50] = 0;
   out_5537402517092157517[51] = 0;
   out_5537402517092157517[52] = 0;
   out_5537402517092157517[53] = 0;
   out_5537402517092157517[54] = 0;
   out_5537402517092157517[55] = 0;
   out_5537402517092157517[56] = 1;
   out_5537402517092157517[57] = 0;
   out_5537402517092157517[58] = 0;
   out_5537402517092157517[59] = 0;
   out_5537402517092157517[60] = 0;
   out_5537402517092157517[61] = 0;
   out_5537402517092157517[62] = 0;
   out_5537402517092157517[63] = 0;
   out_5537402517092157517[64] = 0;
   out_5537402517092157517[65] = 0;
}
void h_33(double *state, double *unused, double *out_3725526701855033401) {
   out_3725526701855033401[0] = state[16];
   out_3725526701855033401[1] = state[17];
   out_3725526701855033401[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6633312141235519764) {
   out_6633312141235519764[0] = 0;
   out_6633312141235519764[1] = 0;
   out_6633312141235519764[2] = 0;
   out_6633312141235519764[3] = 0;
   out_6633312141235519764[4] = 0;
   out_6633312141235519764[5] = 0;
   out_6633312141235519764[6] = 0;
   out_6633312141235519764[7] = 0;
   out_6633312141235519764[8] = 0;
   out_6633312141235519764[9] = 0;
   out_6633312141235519764[10] = 0;
   out_6633312141235519764[11] = 0;
   out_6633312141235519764[12] = 0;
   out_6633312141235519764[13] = 0;
   out_6633312141235519764[14] = 0;
   out_6633312141235519764[15] = 0;
   out_6633312141235519764[16] = 1;
   out_6633312141235519764[17] = 0;
   out_6633312141235519764[18] = 0;
   out_6633312141235519764[19] = 0;
   out_6633312141235519764[20] = 0;
   out_6633312141235519764[21] = 0;
   out_6633312141235519764[22] = 0;
   out_6633312141235519764[23] = 0;
   out_6633312141235519764[24] = 0;
   out_6633312141235519764[25] = 0;
   out_6633312141235519764[26] = 0;
   out_6633312141235519764[27] = 0;
   out_6633312141235519764[28] = 0;
   out_6633312141235519764[29] = 0;
   out_6633312141235519764[30] = 0;
   out_6633312141235519764[31] = 0;
   out_6633312141235519764[32] = 0;
   out_6633312141235519764[33] = 0;
   out_6633312141235519764[34] = 0;
   out_6633312141235519764[35] = 0;
   out_6633312141235519764[36] = 0;
   out_6633312141235519764[37] = 0;
   out_6633312141235519764[38] = 0;
   out_6633312141235519764[39] = 1;
   out_6633312141235519764[40] = 0;
   out_6633312141235519764[41] = 0;
   out_6633312141235519764[42] = 0;
   out_6633312141235519764[43] = 0;
   out_6633312141235519764[44] = 0;
   out_6633312141235519764[45] = 0;
   out_6633312141235519764[46] = 0;
   out_6633312141235519764[47] = 0;
   out_6633312141235519764[48] = 0;
   out_6633312141235519764[49] = 0;
   out_6633312141235519764[50] = 0;
   out_6633312141235519764[51] = 0;
   out_6633312141235519764[52] = 0;
   out_6633312141235519764[53] = 0;
   out_6633312141235519764[54] = 0;
   out_6633312141235519764[55] = 0;
   out_6633312141235519764[56] = 0;
   out_6633312141235519764[57] = 0;
   out_6633312141235519764[58] = 0;
   out_6633312141235519764[59] = 0;
   out_6633312141235519764[60] = 0;
   out_6633312141235519764[61] = 0;
   out_6633312141235519764[62] = 1;
   out_6633312141235519764[63] = 0;
   out_6633312141235519764[64] = 0;
   out_6633312141235519764[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2221680810211877007) {
  H(in_vec, out_2221680810211877007);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9058537909689266592) {
  err_fun(nom_x, delta_x, out_9058537909689266592);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7576143246016953659) {
  inv_err_fun(nom_x, true_x, out_7576143246016953659);
}
void live_H_mod_fun(double *state, double *out_815593853557770859) {
  H_mod_fun(state, out_815593853557770859);
}
void live_f_fun(double *state, double dt, double *out_1987600578531036294) {
  f_fun(state,  dt, out_1987600578531036294);
}
void live_F_fun(double *state, double dt, double *out_8763257145105801012) {
  F_fun(state,  dt, out_8763257145105801012);
}
void live_h_4(double *state, double *unused, double *out_4393751991820450146) {
  h_4(state, unused, out_4393751991820450146);
}
void live_H_4(double *state, double *unused, double *out_1749816418172289953) {
  H_4(state, unused, out_1749816418172289953);
}
void live_h_9(double *state, double *unused, double *out_7635015471942411802) {
  h_9(state, unused, out_7635015471942411802);
}
void live_H_9(double *state, double *unused, double *out_5537402517092157517) {
  H_9(state, unused, out_5537402517092157517);
}
void live_h_10(double *state, double *unused, double *out_4654836922306288541) {
  h_10(state, unused, out_4654836922306288541);
}
void live_H_10(double *state, double *unused, double *out_7114843905500366371) {
  H_10(state, unused, out_7114843905500366371);
}
void live_h_12(double *state, double *unused, double *out_8455142581421422448) {
  h_12(state, unused, out_8455142581421422448);
}
void live_H_12(double *state, double *unused, double *out_8131074795215022949) {
  H_12(state, unused, out_8131074795215022949);
}
void live_h_35(double *state, double *unused, double *out_5602094957643603974) {
  h_35(state, unused, out_5602094957643603974);
}
void live_H_35(double *state, double *unused, double *out_1616845639200317423) {
  H_35(state, unused, out_1616845639200317423);
}
void live_h_32(double *state, double *unused, double *out_5255635781881463689) {
  h_32(state, unused, out_5255635781881463689);
}
void live_H_32(double *state, double *unused, double *out_2989652337278612786) {
  H_32(state, unused, out_2989652337278612786);
}
void live_h_13(double *state, double *unused, double *out_2909743526958408903) {
  h_13(state, unused, out_2909743526958408903);
}
void live_H_13(double *state, double *unused, double *out_4042123882687789281) {
  H_13(state, unused, out_4042123882687789281);
}
void live_h_14(double *state, double *unused, double *out_7635015471942411802) {
  h_14(state, unused, out_7635015471942411802);
}
void live_H_14(double *state, double *unused, double *out_5537402517092157517) {
  H_14(state, unused, out_5537402517092157517);
}
void live_h_33(double *state, double *unused, double *out_3725526701855033401) {
  h_33(state, unused, out_3725526701855033401);
}
void live_H_33(double *state, double *unused, double *out_6633312141235519764) {
  H_33(state, unused, out_6633312141235519764);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
